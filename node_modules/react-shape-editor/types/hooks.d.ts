/// <reference types="react" />
/**
 * Returns a ref that gets updated with the latest value on every render
 */
export declare const useUpdatingRef: <T>(value: T) => import("react").MutableRefObject<T>;
/**
 * Returns a ref telling whether the calling component has been mounted or not.
 * Is false for the first render and unmount step.
 */
export declare const useIsMountedRef: () => React.MutableRefObject<boolean>;
/**
 * Returns a function to force-update a component
 */
export declare const useForceUpdate: () => () => void;
/**
 * Triggers a cancel callback when the Escape key is pressed with a mode active
 *
 * @param isActive The mode is active
 * @param cancel Callback to cancel out of the mode
 */
export declare const useCancelModeOnEscapeKey: (isActive: boolean, cancel: () => void) => void;

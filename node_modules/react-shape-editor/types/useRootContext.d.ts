import React from 'react';
import { CoordinateGetterType } from './types';
declare type DimensionsType = Readonly<{
    vectorWidth: number;
    vectorHeight: number;
    vectorPaddingTop: number;
    vectorPaddingRight: number;
    vectorPaddingBottom: number;
    vectorPaddingLeft: number;
    scale: number;
}>;
interface Props {
    value: DimensionsType;
    children: any;
}
export declare const DimensionsProvider: React.FunctionComponent<Props>;
export declare const CoordinateGetterRefProvider: React.Provider<CoordinateGetterType | undefined>;
export { EventEmitterProvider } from './EventEmitter';
/**
 * Access the root context values
 */
declare const useRootContext: () => {
    eventEmitter: import("./EventEmitter").EventEmitter;
    coordinateGetterRef: CoordinateGetterType;
    dimensions: Readonly<{
        vectorWidth: number;
        vectorHeight: number;
        vectorPaddingTop: number;
        vectorPaddingRight: number;
        vectorPaddingBottom: number;
        vectorPaddingLeft: number;
        scale: number;
    }>;
};
export default useRootContext;

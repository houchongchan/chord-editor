import React from 'react';
import { ReactNodeLike, ReactComponentLike } from 'prop-types';
import { ShapeId, WrappedShapePropsInActions, Rectangle } from './types';
export declare const SelectionContext: React.Context<null>;
declare type Props = {
    children?: ReactNodeLike;
    keyboardTransformMultiplier?: number;
    minimumDistanceForSelection?: number;
    onChange?: (nextRects: Rectangle[], changedShapesProps: WrappedShapePropsInActions[]) => void;
    onDelete?: (event: React.KeyboardEvent, deletedShapesProps: WrappedShapePropsInActions[]) => void;
    onSelectionChange: (selectedShapeIds: ShapeId[]) => void;
    selectedShapeIds: ShapeId[];
    SelectionComponent?: ReactComponentLike;
    selectionComponentProps?: object;
    SelectionDrawComponent?: ReactComponentLike;
};
declare const SelectionLayer: React.FunctionComponent<Props>;
export default SelectionLayer;

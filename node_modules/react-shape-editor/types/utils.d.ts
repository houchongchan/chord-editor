import { ConstrainMoveFunc, ConstrainResizeFunc, Point, Rectangle } from './types';
export declare function getRectFromCornerCoordinates(corner1: Point, corner2: Point): Rectangle;
export declare const getNonIntersectingElements: <T>(arr1: T[], arr2: T[]) => T[];
export declare const defaultConstrainMove: ConstrainMoveFunc;
export declare const defaultConstrainResize: ConstrainResizeFunc;
export declare const forceFocus: (element: SVGElement | null) => void;
declare global {
    interface Document {
        msElementsFromPoint: ((x: number, y: number) => Element[] | null) | undefined;
    }
}
/**
 * Returns elements underneath the specified x and y coordinates.
 * @param clientX
 * @param clientY
 */
export declare const getElementsFromPoint: (clientX: number, clientY: number) => Element[];
